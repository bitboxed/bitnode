apiVersion: batch/v1
kind: CronJob
metadata:
  name: dolt-failover-job
  namespace: dolt-cluster-example
spec:
  schedule: "@yearly"  # Very infrequent
  suspend: true        # Prevents automatic execution
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccountName: doltclusterctl
          containers:
          - name: doltclusterctl
            image: priley86/doltclusterctl:arm64
            imagePullPolicy: Always
            env:
            - name: DOLT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-user
            - name: DOLT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-password
            command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "[*] Running doltclusterctl promotestandby"
              doltclusterctl -n dolt-cluster-example promotestandby dolt
              echo "[âœ“] Failover complete."
          restartPolicy: Never
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: dolt-failover-monitor
  namespace: dolt-cluster-example
spec:
  schedule: "*/1 * * * *"  # Every minute
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: doltclusterctl
          containers:
          - name: healthcheck
            image: busybox
            command:
            - /bin/sh
            - -c
            - |
              if ! timeout 5 nc -z dolt 3306; then
                timestamp=$(date +%Y%m%d%H%M%S)
                job_name="dolt-failover-triggered-$timestamp"
                echo "Dolt primary unhealthy. Triggering failover..."
                kubectl create job --from=cronjob/dolt-failover-job $job_name -n dolt-cluster-example

                # Wait for the failover Job to complete (60s timeout)
                kubectl wait --for=condition=complete job/$job_name -n dolt-cluster-example --timeout=60s

                echo "[*] Restarting proxysql"
                kubectl rollout restart deployment proxysql -n dolt-cluster-example
              else
                echo "Dolt primary is healthy."
              fi
          restartPolicy: OnFailure
