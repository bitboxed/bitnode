apiVersion: v1
kind: ConfigMap
metadata:
  name: dolt
  namespace: dolt-cluster-example
  labels:
    app: dolt
data:
  dolt-0.yaml: |
    log_level: trace
    cluster:
      standby_remotes:
        - name: dolt-1
          remote_url_template: http://dolt-1.dolt-internal:50051/{database}
        - name: dolt-2
          remote_url_template: http://dolt-2.dolt-internal:50051/{database}
      bootstrap_epoch: 1
      bootstrap_role: primary
      remotesapi:
        port: 50051
    listener:
      host: 0.0.0.0
      port: 3306
      max_connections: 128
    data_dir: .
  dolt-1.yaml: |
    log_level: trace
    cluster:
      standby_remotes:
        - name: dolt-0
          remote_url_template: http://dolt-0.dolt-internal:50051/{database}
        - name: dolt-2
          remote_url_template: http://dolt-2.dolt-internal:50051/{database}
      bootstrap_epoch: 1
      bootstrap_role: standby
      remotesapi:
        port: 50051
    listener:
      host: 0.0.0.0
      port: 3306
      max_connections: 128
    data_dir: .
  dolt-2.yaml: |
    log_level: trace
    cluster:
      standby_remotes:
        - name: dolt-0
          remote_url_template: http://dolt-0.dolt-internal:50051/{database}
        - name: dolt-1
          remote_url_template: http://dolt-1.dolt-internal:50051/{database}
      bootstrap_epoch: 1
      bootstrap_role: standby
      remotesapi:
        port: 50051
    listener:
      host: 0.0.0.0
      port: 3306
      max_connections: 128
    data_dir: .
---
apiVersion: v1
kind: Service
metadata:
  name: dolt-internal
  namespace: dolt-cluster-example
  labels:
    app: dolt
spec:
  ports:
    - port: 3306
      name: dolt
  clusterIP: None
  selector:
    app: dolt
---
apiVersion: v1
kind: Service
metadata:
  name: dolt
  namespace: dolt-cluster-example
  labels:
    app: dolt
spec:
  ports:
    - name: dolt
      protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: dolt
    dolthub.com/cluster_role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: dolt-ro
  namespace: dolt-cluster-example
  labels:
    app: dolt
spec:
  ports:
    - port: 3306
      name: dolt
  type: ClusterIP
  selector:
    app: dolt
    dolthub.com/cluster_role: standby
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dolt
  namespace: dolt-cluster-example
  labels:
    app: dolt
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dolt
  serviceName: dolt-internal
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: dolt
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - dolt
                topologyKey: kubernetes.io/hostname
      containers:
        - image: dolthub/dolt:1.54.2
          imagePullPolicy: IfNotPresent
          workingDir: /db
          env:
            - name: DOLT_ROOT_PATH
              value: /db
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DOLT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-user
            - name: DOLT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-password
          name: dolt
          command:
            - /usr/local/bin/dolt
            - sql-server
            - --config
            - config.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/doltdb
            - name: dolt-data
              mountPath: /db
          ports:
            - containerPort: 3306
              name: dolt
      initContainers:
        - image: dolthub/dolt:1.54.2
          imagePullPolicy: IfNotPresent
          workingDir: /db
          env:
            - name: DOLT_ROOT_PATH
              value: /db
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DOLT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-user
            - name: DOLT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dolt-credentials
                  key: admin-password
          name: dolt-init
          volumeMounts:
            - name: config
              mountPath: /etc/doltdb
            - name: dolt-data
              mountPath: /db
          command:
            - /bin/sh
            - -c
            - |-
              dolt config --global --add user.name "dolt kubernetes deployment"
              dolt config --global --add user.email "dolt@kubernetes.deployment"
              cp /etc/doltdb/${POD_NAME}.yaml config.yaml
              if [ -n "$DOLT_PASSWORD" -a ! -f .doltcfg/privileges.db ]; then
                dolt sql -q "create user '$DOLT_USERNAME' identified by '$DOLT_PASSWORD'; grant all privileges on *.* to '$DOLT_USERNAME' with grant option;"
              fi
      volumes:
        - name: config
          configMap:
            name: dolt
  volumeClaimTemplates:
    - metadata:
        name: dolt-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: doltclusterctl
  namespace: dolt-cluster-example
  labels:
    app: doltclusterctl
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - update
      - list
      - watch
      - delete
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
metadata:
  name: doltclusterctl
  namespace: dolt-cluster-example
  labels:
    app: doltclusterctl
kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
subjects:
  - kind: ServiceAccount
    name: doltclusterctl
metadata:
  name: doltclusterctl
  namespace: dolt-cluster-example
  labels:
    app: doltclusterctl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: doltclusterctl